/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var l=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var g=Object.prototype.hasOwnProperty;var L=(o,s)=>{for(var e in s)l(o,e,{get:s[e],enumerable:!0})},M=(o,s,e,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let i of v(s))!g.call(o,i)&&i!==e&&l(o,i,{get:()=>s[i],enumerable:!(t=f(s,i))||t.enumerable});return o};var b=o=>M(l({},"__esModule",{value:!0}),o);var w={};L(w,{default:()=>d});module.exports=b(w);var k=require("obsidian");var a=require("obsidian"),p={stackTabsInPopout:!0,modifierKey:"metaKey",transitionStyle:"slide"},r=class extends a.PluginSettingTab{constructor(s,e){super(s,e),this.plugin=e}display(){let{containerEl:s}=this;s.empty(),s.createEl("h1",{text:"Quick Select Settings"});let e=s.createSpan();e.setText(" (press key)"),document.addEventListener("keydown",t=>{(t.metaKey||t.ctrlKey||t.altKey)&&e.setText(t.key)}),new a.Setting(s).setName("Modifier key").setDesc(createFragment(t=>{t.appendText("Choose the key that activates Quick Select: "),t.append(e)})).addDropdown(t=>t.addOptions({metaKey:"Meta",ctrlKey:"Control",altKey:"Alt"}).setValue(this.plugin.settings.modifierKey).onChange(async i=>{this.plugin.settings.modifierKey=i,await this.plugin.saveSettings()})),new a.Setting(s).setName("Counter transition style").setDesc("Set transition style of Quick Select counters").addDropdown(t=>t.addOptions({none:"None",fade:"Fade",slide:"Slide",permanent:"Permanent"}).setValue(this.plugin.settings.transitionStyle).onChange(async i=>{console.log(document.body.classList),document.body.classList.forEach(n=>{/^quick-select-transition-/.test(n)&&document.body.classList.remove(n)}),document.body.classList.add(`quick-select-transition-${i}`),this.plugin.settings.transitionStyle=i,await this.plugin.saveSettings()})),s.createEl("h2",{text:"Miscellaneous"}),new a.Setting(s).setName("Stack tabs in popout windows").setDesc("Enable or disable stacked tabs for popout windows").addToggle(t=>t.setValue(this.plugin.settings.stackTabsInPopout).onChange(async i=>{this.plugin.settings.stackTabsInPopout=i,await this.plugin.saveSettings()}))}};var h=o=>{o.body.classList.add("quick-select-mod-key-active")},y=(o,s)=>{o.body.classList.add(`quick-select-transition-${s}`)},c=o=>{o.body.classList.remove("quick-select-mod-key-active")},u=(o,s)=>{o.body.classList.remove(`quick-select-transition-${s}`)},m=o=>"app"in o&&"workspace"in o.app;var d=class extends k.Plugin{constructor(){super(...arguments);this.activeModal=null;this.popoutWindows=new Set;this.originalHotkeys={};this.isModifierKeyPressed=!1}async onload(){await this.loadSettings(),this.addSettingTab(new r(this.app,this)),this.modalObserver=new MutationObserver(this.handleDOMMutation.bind(this)),this.modalObserver.observe(document.body,{childList:!0,subtree:!0}),this.registerEvent(this.app.workspace.on("layout-change",this.handleLayoutChange.bind(this))),y(document,this.settings.transitionStyle),this.modifierKeyListener=this.handleModifierKeyChange.bind(this),document.addEventListener("keydown",this.modifierKeyListener),document.addEventListener("keyup",this.modifierKeyListener),this.checkForActiveModal()}async loadSettings(){this.settings=Object.assign({},p,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}handleModifierKeyChange(e){let t=e[this.settings.modifierKey];this.isModifierKeyPressed!==t&&(this.isModifierKeyPressed=t,this.activeModal&&this.updateModalModifierClass())}updateModalModifierClass(){this.activeModal&&(this.isModifierKeyPressed?setTimeout(()=>{this.activeModal&&this.isModifierKeyPressed&&h(this.activeModal.ownerDocument)},150):c(this.activeModal.ownerDocument))}handleLayoutChange(){this.app.workspace.iterateAllLeaves(e=>{let t=e.view.containerEl.closest("body");if(t!=null&&t.classList.contains("is-popout-window")){let i=t.ownerDocument.defaultView;i&&m(i)&&!this.popoutWindows.has(i)&&this.initializePopoutWindow(i)}})}initializePopoutWindow(e){this.popoutWindows.add(e);let t=new MutationObserver(this.handleDOMMutation.bind(this));t.observe(e.document.body,{childList:!0,subtree:!0}),e.addEventListener("keydown",this.modifierKeyListener),e.addEventListener("keyup",this.modifierKeyListener),e.addEventListener("keydown",this.handleKeyPress.bind(this)),this.settings.stackTabsInPopout&&this.setStackedTabsForPopoutWindow(e.app.workspace),this.register(()=>{t.disconnect(),e.removeEventListener("keydown",this.modifierKeyListener),e.removeEventListener("keyup",this.modifierKeyListener),e.removeEventListener("keydown",this.handleKeyPress.bind(this)),this.popoutWindows.delete(e)})}setStackedTabsForPopoutWindow(e){let t=e;t.onLayoutReady(()=>{t.floatingSplit&&t.floatingSplit.children.forEach(i=>{i.children.forEach(n=>{n.children[0].view.getViewType()!=="outline"&&n.setStacked(!0)})})})}handleDOMMutation(e){for(let t of e)t.addedNodes.forEach(i=>{i instanceof HTMLElement&&(i.classList.contains("modal-container")||i.classList.contains("suggestion-container"))&&this.handleModalOpen(i)}),t.removedNodes.forEach(i=>{i instanceof HTMLElement&&(i.classList.contains("modal-container")||i.classList.contains("suggestion-container"))&&this.handleModalClosed(i)})}handleModalOpen(e){this.activeModal=e,this.disableDefaultHotkeys(),this.keyListener=this.handleKeyPress.bind(this),this.keyListener&&document.addEventListener("keydown",this.keyListener,!0),this.isModifierKeyPressed&&this.updateModalModifierClass()}handleModalClosed(e){this.activeModal===e&&(c(this.activeModal.ownerDocument),this.activeModal=null,this.restoreDefaultHotkeys(),this.keyListener&&(document.removeEventListener("keydown",this.keyListener,!0),this.keyListener=null))}disableDefaultHotkeys(){let e=this.app.internalPlugins.app.hotkeyManager;for(let i=1;i<9;i++){let n=`workspace:goto-tab-${i}`;this.originalHotkeys[n]=e.getDefaultHotkeys(n),e.removeDefaultHotkeys(n)}let t="workspace:goto-last-tab";this.originalHotkeys[t]=e.getDefaultHotkeys(t),e.removeDefaultHotkeys(t)}restoreDefaultHotkeys(){let e=this.app.internalPlugins.app.hotkeyManager;for(let[t,i]of Object.entries(this.originalHotkeys))e.addDefaultHotkeys(t,i);e.bake(),this.originalHotkeys={}}returnResultsItems(e){let t=e.querySelectorAll(".suggestion-item:not(.mod-group)");return Array.from(t).slice(0,9).map((i,n)=>({title:i.textContent||`Result ${n+1}`,element:i}))}handleResultsItemClick(e){if(this.activeModal){let t=this.activeModal.querySelector(".suggestion, .prompt-results");if(t){let i=this.returnResultsItems(t),n=parseInt(e.key)-1;i&&i[n]&&(e.preventDefault(),i[n].element.click())}}}handleKeyPress(e){this.activeModal&&e[this.settings.modifierKey]&&e.key>="1"&&e.key<="9"&&this.handleResultsItemClick(e)}checkForActiveModal(){let e=document.querySelector(".modal-container, .suggestion-container");e instanceof HTMLElement&&this.handleModalOpen(e)}onunload(){this.modalObserver.disconnect(),u(document,this.settings.transitionStyle),document.removeEventListener("keydown",this.modifierKeyListener),document.removeEventListener("keyup",this.modifierKeyListener),this.popoutWindows.forEach(e=>{e.removeEventListener("keydown",this.modifierKeyListener),e.removeEventListener("keyup",this.modifierKeyListener),this.keyListener&&e.removeEventListener("keydown",this.keyListener)}),this.keyListener&&(document.removeEventListener("keydown",this.keyListener),this.keyListener=null)}};

/* nosourcemap */